/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/router/testing/router_testing_module';
import * as import2 from '@angular/router/src/router_module';
import * as import3 from '@angular/common/testing/location_mock';
import * as import4 from '@angular/router/src/url_tree';
import * as import5 from '@angular/router/src/router_outlet_map';
import * as import6 from '@angular/router/src/router_preloader';
import * as import7 from '@angular/common/testing/mock_location_strategy';
import * as import8 from '@angular/core/src/di/injector';
import * as import9 from '@angular/core/src/linker/compiler';
import * as import10 from '@angular/router/src/url_handling_strategy';
import * as import11 from '@angular/common/src/location/location';
import * as import12 from '@angular/core/src/linker/ng_module_factory_loader';
import * as import13 from '@angular/router/src/router_config_loader';
import * as import14 from '@angular/router/src/router';
import * as import15 from '@angular/router/src/router_state';
import * as import16 from '@angular/common/src/location/location_strategy';
class RouterTestingModuleInjector extends import0.NgModuleInjector<import1.RouterTestingModule> {
  _RouterModule_0:import2.RouterModule;
  _RouterTestingModule_1:import1.RouterTestingModule;
  __Location_2:import3.SpyLocation;
  __UrlSerializer_3:import4.DefaultUrlSerializer;
  __RouterOutletMap_4:import5.RouterOutletMap;
  __NgModuleFactoryLoader_5:import1.SpyNgModuleFactoryLoader;
  __ROUTES_6:any[];
  __Router_7:any;
  __ActivatedRoute_8:any;
  _NoPreloading_9:import6.NoPreloading;
  _PreloadingStrategy_10:any;
  _RouterPreloader_11:import6.RouterPreloader;
  __PreloadAllModules_12:import6.PreloadAllModules;
  __ROUTER_CONFIGURATION_13:any;
  __LocationStrategy_14:import7.MockLocationStrategy;
  constructor(parent:import8.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _Location_2():import3.SpyLocation {
    if ((this.__Location_2 == null)) { (this.__Location_2 = new import3.SpyLocation()); }
    return this.__Location_2;
  }
  get _UrlSerializer_3():import4.DefaultUrlSerializer {
    if ((this.__UrlSerializer_3 == null)) { (this.__UrlSerializer_3 = new import4.DefaultUrlSerializer()); }
    return this.__UrlSerializer_3;
  }
  get _RouterOutletMap_4():import5.RouterOutletMap {
    if ((this.__RouterOutletMap_4 == null)) { (this.__RouterOutletMap_4 = new import5.RouterOutletMap()); }
    return this.__RouterOutletMap_4;
  }
  get _NgModuleFactoryLoader_5():import1.SpyNgModuleFactoryLoader {
    if ((this.__NgModuleFactoryLoader_5 == null)) { (this.__NgModuleFactoryLoader_5 = new import1.SpyNgModuleFactoryLoader(this.parent.get(import9.Compiler))); }
    return this.__NgModuleFactoryLoader_5;
  }
  get _ROUTES_6():any[] {
    if ((this.__ROUTES_6 == null)) { (this.__ROUTES_6 = [([] as any[])]); }
    return this.__ROUTES_6;
  }
  get _Router_7():any {
    if ((this.__Router_7 == null)) { (this.__Router_7 = import1.setupTestingRouter(this._UrlSerializer_3,this._RouterOutletMap_4,this._Location_2,this._NgModuleFactoryLoader_5,this.parent.get(import9.Compiler),this,this._ROUTES_6,this.parent.get(import10.UrlHandlingStrategy,(null as any)))); }
    return this.__Router_7;
  }
  get _ActivatedRoute_8():any {
    if ((this.__ActivatedRoute_8 == null)) { (this.__ActivatedRoute_8 = import2.rootRoute(this._Router_7)); }
    return this.__ActivatedRoute_8;
  }
  get _PreloadAllModules_12():import6.PreloadAllModules {
    if ((this.__PreloadAllModules_12 == null)) { (this.__PreloadAllModules_12 = new import6.PreloadAllModules()); }
    return this.__PreloadAllModules_12;
  }
  get _ROUTER_CONFIGURATION_13():any {
    if ((this.__ROUTER_CONFIGURATION_13 == null)) { (this.__ROUTER_CONFIGURATION_13 = {enableTracing: false}); }
    return this.__ROUTER_CONFIGURATION_13;
  }
  get _LocationStrategy_14():import7.MockLocationStrategy {
    if ((this.__LocationStrategy_14 == null)) { (this.__LocationStrategy_14 = new import7.MockLocationStrategy()); }
    return this.__LocationStrategy_14;
  }
  createInternal():import1.RouterTestingModule {
    this._RouterModule_0 = new import2.RouterModule(this.parent.get(import2.ROUTER_FORROOT_GUARD,(null as any)));
    this._RouterTestingModule_1 = new import1.RouterTestingModule();
    this._NoPreloading_9 = new import6.NoPreloading();
    this._PreloadingStrategy_10 = this._NoPreloading_9;
    this._RouterPreloader_11 = new import6.RouterPreloader(this._Router_7,this._NgModuleFactoryLoader_5,this.parent.get(import9.Compiler),this,this._PreloadingStrategy_10);
    return this._RouterTestingModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.RouterModule)) { return this._RouterModule_0; }
    if ((token === import1.RouterTestingModule)) { return this._RouterTestingModule_1; }
    if ((token === import11.Location)) { return this._Location_2; }
    if ((token === import4.UrlSerializer)) { return this._UrlSerializer_3; }
    if ((token === import5.RouterOutletMap)) { return this._RouterOutletMap_4; }
    if ((token === import12.NgModuleFactoryLoader)) { return this._NgModuleFactoryLoader_5; }
    if ((token === import13.ROUTES)) { return this._ROUTES_6; }
    if ((token === import14.Router)) { return this._Router_7; }
    if ((token === import15.ActivatedRoute)) { return this._ActivatedRoute_8; }
    if ((token === import6.NoPreloading)) { return this._NoPreloading_9; }
    if ((token === import6.PreloadingStrategy)) { return this._PreloadingStrategy_10; }
    if ((token === import6.RouterPreloader)) { return this._RouterPreloader_11; }
    if ((token === import6.PreloadAllModules)) { return this._PreloadAllModules_12; }
    if ((token === import2.ROUTER_CONFIGURATION)) { return this._ROUTER_CONFIGURATION_13; }
    if ((token === import16.LocationStrategy)) { return this._LocationStrategy_14; }
    return notFoundResult;
  }
  destroyInternal():void {
    this._RouterPreloader_11.ngOnDestroy();
  }
}
export const RouterTestingModuleNgFactory:import0.NgModuleFactory<import1.RouterTestingModule> = new import0.NgModuleFactory(RouterTestingModuleInjector,import1.RouterTestingModule);